// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDietViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final Button dietAnalysisButton;

  @NonNull
  public final Button editButton;

  @NonNull
  public final LinearLayout menuListContainer;

  @NonNull
  public final Button nextDietButton;

  @NonNull
  public final Button prevDietButton;

  @NonNull
  public final TextView selectedDietName;

  @NonNull
  public final TextView totalCaloriesRow;

  @NonNull
  public final TextView totalCaloriesText;

  @NonNull
  public final TextView totalCarbsRow;

  @NonNull
  public final TextView totalFatRow;

  @NonNull
  public final TextView totalProteinRow;

  private ActivityDietViewBinding(@NonNull LinearLayout rootView,
      @NonNull CalendarView calendarView, @NonNull Button deleteButton,
      @NonNull Button dietAnalysisButton, @NonNull Button editButton,
      @NonNull LinearLayout menuListContainer, @NonNull Button nextDietButton,
      @NonNull Button prevDietButton, @NonNull TextView selectedDietName,
      @NonNull TextView totalCaloriesRow, @NonNull TextView totalCaloriesText,
      @NonNull TextView totalCarbsRow, @NonNull TextView totalFatRow,
      @NonNull TextView totalProteinRow) {
    this.rootView = rootView;
    this.calendarView = calendarView;
    this.deleteButton = deleteButton;
    this.dietAnalysisButton = dietAnalysisButton;
    this.editButton = editButton;
    this.menuListContainer = menuListContainer;
    this.nextDietButton = nextDietButton;
    this.prevDietButton = prevDietButton;
    this.selectedDietName = selectedDietName;
    this.totalCaloriesRow = totalCaloriesRow;
    this.totalCaloriesText = totalCaloriesText;
    this.totalCarbsRow = totalCarbsRow;
    this.totalFatRow = totalFatRow;
    this.totalProteinRow = totalProteinRow;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDietViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDietViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_diet_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDietViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendar_view;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.diet_analysis_button;
      Button dietAnalysisButton = ViewBindings.findChildViewById(rootView, id);
      if (dietAnalysisButton == null) {
        break missingId;
      }

      id = R.id.edit_button;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.menu_list_container;
      LinearLayout menuListContainer = ViewBindings.findChildViewById(rootView, id);
      if (menuListContainer == null) {
        break missingId;
      }

      id = R.id.next_diet_button;
      Button nextDietButton = ViewBindings.findChildViewById(rootView, id);
      if (nextDietButton == null) {
        break missingId;
      }

      id = R.id.prev_diet_button;
      Button prevDietButton = ViewBindings.findChildViewById(rootView, id);
      if (prevDietButton == null) {
        break missingId;
      }

      id = R.id.selected_diet_name;
      TextView selectedDietName = ViewBindings.findChildViewById(rootView, id);
      if (selectedDietName == null) {
        break missingId;
      }

      id = R.id.total_calories_row;
      TextView totalCaloriesRow = ViewBindings.findChildViewById(rootView, id);
      if (totalCaloriesRow == null) {
        break missingId;
      }

      id = R.id.total_calories_text;
      TextView totalCaloriesText = ViewBindings.findChildViewById(rootView, id);
      if (totalCaloriesText == null) {
        break missingId;
      }

      id = R.id.total_carbs_row;
      TextView totalCarbsRow = ViewBindings.findChildViewById(rootView, id);
      if (totalCarbsRow == null) {
        break missingId;
      }

      id = R.id.total_fat_row;
      TextView totalFatRow = ViewBindings.findChildViewById(rootView, id);
      if (totalFatRow == null) {
        break missingId;
      }

      id = R.id.total_protein_row;
      TextView totalProteinRow = ViewBindings.findChildViewById(rootView, id);
      if (totalProteinRow == null) {
        break missingId;
      }

      return new ActivityDietViewBinding((LinearLayout) rootView, calendarView, deleteButton,
          dietAnalysisButton, editButton, menuListContainer, nextDietButton, prevDietButton,
          selectedDietName, totalCaloriesRow, totalCaloriesText, totalCarbsRow, totalFatRow,
          totalProteinRow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
