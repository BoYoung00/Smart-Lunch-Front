// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogOrderDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView crowdLevel;

  @NonNull
  public final TextView estimatedTime;

  @NonNull
  public final TextView orderDate;

  @NonNull
  public final RecyclerView rvOrderDetails;

  @NonNull
  public final TextView storeName;

  @NonNull
  public final TextView tvTotalPrice;

  @NonNull
  public final TextView waitingTime;

  private DialogOrderDetailsBinding(@NonNull LinearLayout rootView, @NonNull TextView crowdLevel,
      @NonNull TextView estimatedTime, @NonNull TextView orderDate,
      @NonNull RecyclerView rvOrderDetails, @NonNull TextView storeName,
      @NonNull TextView tvTotalPrice, @NonNull TextView waitingTime) {
    this.rootView = rootView;
    this.crowdLevel = crowdLevel;
    this.estimatedTime = estimatedTime;
    this.orderDate = orderDate;
    this.rvOrderDetails = rvOrderDetails;
    this.storeName = storeName;
    this.tvTotalPrice = tvTotalPrice;
    this.waitingTime = waitingTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogOrderDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogOrderDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_order_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogOrderDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.crowdLevel;
      TextView crowdLevel = ViewBindings.findChildViewById(rootView, id);
      if (crowdLevel == null) {
        break missingId;
      }

      id = R.id.estimatedTime;
      TextView estimatedTime = ViewBindings.findChildViewById(rootView, id);
      if (estimatedTime == null) {
        break missingId;
      }

      id = R.id.orderDate;
      TextView orderDate = ViewBindings.findChildViewById(rootView, id);
      if (orderDate == null) {
        break missingId;
      }

      id = R.id.rvOrderDetails;
      RecyclerView rvOrderDetails = ViewBindings.findChildViewById(rootView, id);
      if (rvOrderDetails == null) {
        break missingId;
      }

      id = R.id.storeName;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      id = R.id.tvTotalPrice;
      TextView tvTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPrice == null) {
        break missingId;
      }

      id = R.id.waitingTime;
      TextView waitingTime = ViewBindings.findChildViewById(rootView, id);
      if (waitingTime == null) {
        break missingId;
      }

      return new DialogOrderDetailsBinding((LinearLayout) rootView, crowdLevel, estimatedTime,
          orderDate, rvOrderDetails, storeName, tvTotalPrice, waitingTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
